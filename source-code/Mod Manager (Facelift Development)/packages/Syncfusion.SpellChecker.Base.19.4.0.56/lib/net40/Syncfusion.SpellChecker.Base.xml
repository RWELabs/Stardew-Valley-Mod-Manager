<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SpellChecker.Base</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.SpellChecker.Base.AccuracyLevels">
            <summary>
            Represents a list of accuracy levels based on which phonetic matching is executed for filtering suggestions
            </summary>
        </member>
        <member name="F:Syncfusion.SpellChecker.Base.AccuracyLevels.High">
            <summary>
            Represents a high level which filters maximum possible suggestions.
            </summary>
        </member>
        <member name="F:Syncfusion.SpellChecker.Base.AccuracyLevels.Medium">
            <summary>
            Represents a medium level which filters matching suggestions.
            </summary>
        </member>
        <member name="F:Syncfusion.SpellChecker.Base.AccuracyLevels.Low">
            <summary>
            Represents a most accurate level which filters accurate suggestions only.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.TransmutationHelper.GetTransmutations(System.Char[])">
            <summary>
            Returns a list of possible combinations for the given character array
            </summary>
        </member>
        <member name="T:Syncfusion.SpellChecker.Base.CustomDictionaryBase">
            <summary>
            Represents a class that stores information about custom words
            </summary>
            <remarks>
            Extra words can be stored in custom dictionary. Any words added using ‘Add to dictionary’, is also stored in this custom dictionary.
            </remarks>
            <example>
            var english = new HunspellDictionary();
            english.Culture = new CultureInfo("en-us");
            english.DictionaryUri = new Uri("/SpellCheckerDemo;component//english.dic");
            english.GrammarUri = new Uri("/SpellCheckerDemo;component//english.aff");
            
            var custom = new CustomDictionary();
            custom.Culture = new CultureInfo("en-us");
            english.DictionaryUri = new Uri("/Resources/custom.dic");
            
            var dictionaries = new DictionaryCollection();
            dictionaries.Add(english);
            dictionaries.Add(custom);
            
            spellChecker.Dictionaries = dictionaries;
            spellChecker.Culture = new CultureInfo("en-us");
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.SpellChecker.Base.DictionaryBase" -->
        <member name="M:Syncfusion.SpellChecker.Base.DictionaryBase.GetDictionaryStream">
            <summary>
            Gets or Sets the dictionary uri of a dictionary.
            </summary>
        </member>
        <member name="P:Syncfusion.SpellChecker.Base.DictionaryBase.Culture">
            <summary>
            Gets or Sets the culture of a dictionary.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.SpellChecker.Base.DictionaryCollection" -->
        <member name="T:Syncfusion.SpellChecker.Base.GrammarDictionaryBase">
            <summary>
            Represents base class that requires base dictionary file with affix file.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.GrammarDictionaryBase.GetGrammarStream">
            <summary>
            Gets or Sets the grammar uri of a hunspell dictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.GrammarDictionaryBase.DictParser(System.IO.StreamReader,System.Collections.Generic.Dictionary{System.String,Syncfusion.SpellChecker.Base.GrammarRule})">
            <summary>
            DictParser generate a list of words by using both .dic and .aff file.
            </summary>
            <param name="dictionary"></param>
            <param name="ruleDictionary"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.SpellChecker.Base.HunspellDictionaryBase">
            <summary>
            A class that requires base dictionary and affix file. It has algorithm that process file provided and loads words required for dictionary.
            </summary>
            <example>
            var english = new HunspellDictionary();
            english.Culture = new CultureInfo("en-us");
            english.DictionaryUri = new Uri("/SpellCheckerDemo;component//english.dic");
            english.GrammarUri = new Uri("/SpellCheckerDemo;component//english.aff");
            
            var dictionaries = new DictionaryCollection();
            dictionaries.Add(english);
            
            spellChecker.Dictionaries = dictionaries;
            spellChecker.Culture = new CultureInfo("en-us");
            </example>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.HunspellDictionaryBase.GrammerParser(System.IO.StreamReader)">
            <summary>
            To create rules from Hunspell .aff file
            </summary>
            <param name="grammar"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.SpellChecker.Base.IspellDictionaryBase">
            <summary>
            A class that requires base dictionary and affix file. It has algorithm that process file provided and loads words required for dictionary.
            </summary>
            <example>
            var french = new IspellDictionary();
            french.Culture = new CultureInfo("fr");
            french.DictionaryUri = new Uri("/SpellCheckerDemo;component//french.dic");
            french.GrammarUri = new Uri("/SpellCheckerDemo;component//french.xlg");
            
            var dictionaries = new DictionaryCollection();
            dictionaries.Add(french);
            
            spellChecker.Dictionaries = dictionaries;
            spellChecker.Culture = new CultureInfo("fr");
            </example>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.IspellDictionaryBase.GrammerParser(System.IO.StreamReader)">
            <summary>
            To create rules from Ispell .aff file
            </summary>
            <param name="grammar"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.VerbalProcessor.GetSimilarSounds(System.String,System.Collections.Generic.List{System.Object},Syncfusion.SpellChecker.Base.AccuracyLevels)">
            <summary>
            Returns a list of phonetic suggestions for the given word in specified accuracy level.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.Sorter.Compare(System.Object,System.Object)">
            <summary>
            Compares the two objects.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.Sorter.Compare(System.String,System.String)">
            <summary>
            Compares the two String values
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.ReverseSorter.Compare(System.String,System.String)">
            <summary>
            Compares the two object values.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.ReverseSorter.Reverse(System.String)">
            <summary>
            Returns reverse String of input String
            </summary>
        </member>
        <member name="T:Syncfusion.SpellChecker.Base.SpellCheckerBase">
            <summary>
            SpellChecker base helps to find erroneous spelling in a word and provides suggestions for it.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.#ctor(System.IO.Stream)">
            <summary>
            Initializes the instance of SpellChecker base.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.#ctor">
            <summary>
            Initializes the instance of SpellChecker base.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.AddWordToDictionary(System.String)">
            <summary>
            Adds the word to dictionary word collection
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.HasError(System.String)">
            <summary>
            Checks whether the word exists in dictionary
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.GetSuggestions(System.String)">
            <summary>
            Returns the suggestions for error word
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.GetAnagrams(System.String)">
            <summary>
            Returns the anagrams for error word
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.GetPhoneticWords(System.String)">
            <summary>
            Returns the phonetic suggestions for error word in medium accuracy.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.GetPhoneticWords(System.String,Syncfusion.SpellChecker.Base.AccuracyLevels)">
            <summary>
            Returns the phonetic suggestions for error word in specified accuracy.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.IsPatternMatch(System.String)">
            <summary>
            Returns whether the word matches Email or File name or URL pattern.
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.AddWordsInDictionaryStream(System.IO.Stream)">
            <summary>
            Adds the word from custom stream to dicitionary collection
            </summary>
        </member>
        <member name="M:Syncfusion.SpellChecker.Base.SpellCheckerBase.IsInDictionary(System.String)">
            <summary>
            To check whether the word is present in dictionart or not.
            </summary>
            <param name="word"></param>
            <returns>Returns a boolean value.</returns>
        </member>
        <member name="P:Syncfusion.SpellChecker.Base.SpellCheckerBase.IgnoreAlphaNumericWords">
            <summary>
            Gets or Sets the boolean value to check AlphaNumericWords
            </summary>
        </member>
        <member name="P:Syncfusion.SpellChecker.Base.SpellCheckerBase.IgnoreFileNames">
            <summary>
            Gets or Sets the boolean value to check file names
            </summary>
        </member>
        <member name="P:Syncfusion.SpellChecker.Base.SpellCheckerBase.IgnoreHtmlTags">
            <summary>
            Gets or Sets the boolean value to check html tags
            </summary>
        </member>
        <member name="P:Syncfusion.SpellChecker.Base.SpellCheckerBase.IgnoreEmailAddress">
            <summary>
            Gets or Sets the boolean value to check Email addresses
            </summary>
        </member>
        <member name="P:Syncfusion.SpellChecker.Base.SpellCheckerBase.IgnoreMixedCaseWords">
            <summary>
            Gets or Sets the boolean value to check mixed case words
            </summary>
        </member>
        <member name="P:Syncfusion.SpellChecker.Base.SpellCheckerBase.IgnoreUpperCaseWords">
            <summary>
            Gets or Sets the boolean value to check upper case words
            </summary>
        </member>
        <member name="P:Syncfusion.SpellChecker.Base.SpellCheckerBase.IgnoreUrl">
            <summary>
            Gets or Sets the boolean value to check urls
            </summary>
        </member>
    </members>
</doc>
