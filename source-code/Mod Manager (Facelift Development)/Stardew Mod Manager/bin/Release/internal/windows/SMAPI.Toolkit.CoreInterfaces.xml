<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SMAPI.Toolkit.CoreInterfaces</name>
    </assembly>
    <members>
        <member name="T:StardewModdingAPI.IManifest">
            <summary>A manifest which describes a mod for SMAPI.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.Name">
            <summary>The mod name.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.Description">
            <summary>A brief description of the mod.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.Author">
            <summary>The mod author's name.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.Version">
            <summary>The mod version.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.MinimumApiVersion">
            <summary>The minimum SMAPI version required by this mod, if any.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.UniqueID">
            <summary>The unique mod ID.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.EntryDll">
            <summary>The name of the DLL in the directory that has the <c>Entry</c> method. Mutually exclusive with <see cref="P:StardewModdingAPI.IManifest.ContentPackFor"/>.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.ContentPackFor">
            <summary>The mod which will read this as a content pack. Mutually exclusive with <see cref="P:StardewModdingAPI.IManifest.EntryDll"/>.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.Dependencies">
            <summary>The other mods that must be loaded before this mod.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.UpdateKeys">
            <summary>The namespaced mod IDs to query for updates (like <c>Nexus:541</c>).</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifest.ExtraFields">
            <summary>Any manifest fields which didn't match a valid field.</summary>
        </member>
        <member name="T:StardewModdingAPI.IManifestContentPackFor">
            <summary>Indicates which mod can read the content pack represented by the containing manifest.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifestContentPackFor.UniqueID">
            <summary>The unique ID of the mod which can read this content pack.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifestContentPackFor.MinimumVersion">
            <summary>The minimum required version (if any).</summary>
        </member>
        <member name="T:StardewModdingAPI.IManifestDependency">
            <summary>A mod dependency listed in a mod manifest.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifestDependency.UniqueID">
            <summary>The unique mod ID to require.</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifestDependency.MinimumVersion">
            <summary>The minimum required version (if any).</summary>
        </member>
        <member name="P:StardewModdingAPI.IManifestDependency.IsRequired">
            <summary>Whether the dependency must be installed to use the mod.</summary>
        </member>
        <member name="T:StardewModdingAPI.ISemanticVersion">
            <summary>A semantic version with an optional release tag.</summary>
        </member>
        <member name="P:StardewModdingAPI.ISemanticVersion.MajorVersion">
            <summary>The major version incremented for major API changes.</summary>
        </member>
        <member name="P:StardewModdingAPI.ISemanticVersion.MinorVersion">
            <summary>The minor version incremented for backwards-compatible changes.</summary>
        </member>
        <member name="P:StardewModdingAPI.ISemanticVersion.PatchVersion">
            <summary>The patch version for backwards-compatible bug fixes.</summary>
        </member>
        <member name="P:StardewModdingAPI.ISemanticVersion.PrereleaseTag">
            <summary>An optional prerelease tag.</summary>
        </member>
        <member name="P:StardewModdingAPI.ISemanticVersion.BuildMetadata">
            <summary>Optional build metadata. This is ignored when determining version precedence.</summary>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.IsPrerelease">
            <summary>Whether this is a prerelease version.</summary>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.IsOlderThan(StardewModdingAPI.ISemanticVersion)">
            <summary>Get whether this version is older than the specified version.</summary>
            <param name="other">The version to compare with this instance.</param>
            <remarks>Although the <paramref name="other"/> parameter is nullable, it isn't optional. A <c>null</c> version is considered earlier than every possible valid version, so passing <c>null</c> to <paramref name="other"/> will always return false.</remarks>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.IsOlderThan(System.String)">
            <summary>Get whether this version is older than the specified version.</summary>
            <param name="other">The version to compare with this instance.  A null value is never older.</param>
            <exception cref="T:System.FormatException">The specified version is not a valid semantic version.</exception>
            <remarks>Although the <paramref name="other"/> parameter is nullable, it isn't optional. A <c>null</c> version is considered earlier than every possible valid version, so passing <c>null</c> to <paramref name="other"/> will always return false.</remarks>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.IsNewerThan(StardewModdingAPI.ISemanticVersion)">
            <summary>Get whether this version is newer than the specified version.</summary>
            <param name="other">The version to compare with this instance. A null value is always older.</param>
            <remarks>Although the <paramref name="other"/> parameter is nullable, it isn't optional. A <c>null</c> version is considered earlier than every possible valid version, so passing <c>null</c> to <paramref name="other"/> will always return true.</remarks>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.IsNewerThan(System.String)">
            <summary>Get whether this version is newer than the specified version.</summary>
            <param name="other">The version to compare with this instance. A null value is always older.</param>
            <exception cref="T:System.FormatException">The specified version is not a valid semantic version.</exception>
            <remarks>Although the <paramref name="other"/> parameter is nullable, it isn't optional. A <c>null</c> version is considered earlier than every possible valid version, so passing <c>null</c> to <paramref name="other"/> will always return true.</remarks>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.IsBetween(StardewModdingAPI.ISemanticVersion,StardewModdingAPI.ISemanticVersion)">
            <summary>Get whether this version is between two specified versions (inclusively).</summary>
            <param name="min">The minimum version. A null value is always older.</param>
            <param name="max">The maximum version. A null value is never newer.</param>
            <remarks>Although the <paramref name="min"/> and <paramref name="max"/> parameters are nullable, they are not optional. A <c>null</c> version is considered earlier than every possible valid version. For example, passing <c>null</c> to <paramref name="max"/> will always return false, since no valid version can be earlier than <c>null</c>.</remarks>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.IsBetween(System.String,System.String)">
            <summary>Get whether this version is between two specified versions (inclusively).</summary>
            <param name="min">The minimum version. A null value is always older.</param>
            <param name="max">The maximum version. A null value is never newer.</param>
            <exception cref="T:System.FormatException">One of the specified versions is not a valid semantic version.</exception>
            <remarks>Although the <paramref name="min"/> and <paramref name="max"/> parameters are nullable, they are not optional. A <c>null</c> version is considered earlier than every possible valid version. For example, passing <c>null</c> to <paramref name="max"/> will always return false, since no valid version can be earlier than <c>null</c>.</remarks>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.ToString">
            <summary>Get a string representation of the version.</summary>
        </member>
        <member name="M:StardewModdingAPI.ISemanticVersion.IsNonStandard">
            <summary>Whether the version uses non-standard extensions, like four-part game versions on some platforms.</summary>
        </member>
    </members>
</doc>
